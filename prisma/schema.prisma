generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Book {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  title     String    @db.VarChar(255)
  deletedAt DateTime? @db.Timestamp(0)
  userId    Int    @db.UnsignedInt
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_Book_owner_User")
  Mark      Mark[]

  @@index([userId], map: "fk_Book_owner_User")
}

model Mark {
  id          Int    @id @default(autoincrement()) @db.UnsignedInt
  bookId      Int    @db.UnsignedInt
  url         String @db.VarChar(1024)
  title       String @db.VarChar(255)
  image       String @db.VarChar(500)
  description String @db.VarChar(1000)
  highlight   String @default("bg-pink-200")
  Book        Book   @relation(fields: [bookId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mark_ibfk_1")

  @@index([bookId], map: "fk_Mark_book")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id                Int   @id @default(autoincrement()) @db.UnsignedInt
  username          String   @db.VarChar(31)
  authType          String   @default("credentials") @db.VarChar(255)
  email             String?  @unique @db.VarChar(200)
  password          String?  @db.VarChar(128)
  createAt          DateTime @default(now())
  updateAt          DateTime @default(now()) @updatedAt @map("updatedate")
  providerAccountId String?  @db.VarChar(255)
  refreshToken      String?  @db.VarChar(255)
  Book              Book[]
}
